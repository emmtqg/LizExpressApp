name: CI
on:
  workflow_dispatch:
    inputs:
      environment:
        description: Environment to deploy to
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - uat
          - prod
  pull_request:
    branches:
      - dev
      - main
    types:
      - opened
      - closed
      - reopened
      - synchronize

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  GITHUB_PR_NUMBER: ${{ github.event.pull_request.number }}
  PR_PATH: /pr/${{ github.event.pull_request.number }}

jobs:
  lint:
    if: |
      github.event_name != 'pull_request' ||
      github.event.action != 'closed' ||
      github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: 'package.json'
          cache: 'npm'
      - run: npm ci
      - name: Run linter
        run: npm run lint

  test:
    if: |
      github.event_name != 'pull_request' ||
      github.event.action != 'closed' ||
      github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: 'package.json'
          cache: 'npm'
      - run: npm ci
      - name: Run tests
        run: npm run test

  sonarqube:
    if: |
      github.event_name != 'pull_request' ||
      github.event.action != 'closed' ||
      github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build:
    if: |
      github.event_name != 'pull_request' ||
      github.event.action != 'closed' ||
      github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || 'dev' }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: 'package.json'
          cache: 'npm'
      - run: npm ci
      - name: Build
        run: npm run build
        env:
          PUBLIC_URL: ${{ (github.event_name == 'pull_request' && github.event.action != 'closed') && env.PR_PATH || '' }}
          REACT_APP_AUTHORITY: ${{ vars.REACT_APP_AUTHORITY }}
          REACT_APP_BASE_API_HOST: ${{ vars.REACT_APP_BASE_API_HOST }}
          REACT_APP_BASE_API_URL: ${{ vars.REACT_APP_BASE_API_URL }}
          REACT_APP_BASENAME: ${{ (github.event_name == 'pull_request' && github.event.action != 'closed') && env.PR_PATH || '' }}
          REACT_APP_C55_ENV: ${{ vars.REACT_APP_C55_ENV }}
          REACT_APP_CLIENT_ID: ${{ vars.REACT_APP_CLIENT_ID }}
          REACT_APP_PENDO_API_KEY: ${{ vars.REACT_APP_PENDO_API_KEY }}
          REACT_APP_PENDO_SUB_ID: ${{ vars.REACT_APP_PENDO_SUB_ID }}
          REACT_APP_LOGO_TAG: ${{ vars.REACT_APP_LOGO_TAG }}
          REACT_APP_PR_NUMBER: ${{ (github.event_name == 'pull_request' && github.event.action != 'closed') && env.GITHUB_PR_NUMBER || '' }}
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build

  deploy-pr-preview:
    if: |
      github.event_name == 'pull_request' && 
      github.event.action != 'closed'
    needs: [build]
    runs-on: ubuntu-latest
    environment: 'dev'
    permissions:
      contents: read # for actions/checkout to fetch code
      pull-requests: write # for Azure/static-web-apps-deploy to comment on PRs
    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'nationalgrid-uselectric/oip-frontend-build'
          ssh-key: ${{ secrets.OIP_FRONTEND_BUILD_SSH_KEY }}
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build${{ env.PR_PATH }}
      - name: Add & commit changes
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add -A
          git commit -m "Add preview for PR #${{env.GITHUB_PR_NUMBER}}" || true
          git push
      - name: Deploy Azure Static Web App
        env:
          # Set these env vars to allow "prod" deployment from PR
          DEPLOYMENT_PROVIDER: 'Custom'
          REPOSITORY_URL: ${{github.event.repository.html_url}}
          BRANCH: ${{github.event.pull_request.head.ref}}
        uses: azure/static-web-apps-deploy@v1
        with:
          action: upload
          app_location: build
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          skip_app_build: true
      - name: Comment on PR
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Preview deployed to https://dev-futurenow.nationalgrid.com${{ env.PR_PATH }}'
            })

  delete-pr-preview:
    if: |
      github.event_name == 'pull_request' &&
      github.event.action == 'closed' &&
      github.event.pull_request.merged == false
    runs-on: ubuntu-latest
    environment: 'dev'
    permissions:
      contents: read # for actions/checkout to fetch code
      pull-requests: write # for Azure/static-web-apps-deploy to comment on PRs
    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'nationalgrid-uselectric/oip-frontend-build'
          ssh-key: ${{ secrets.OIP_FRONTEND_BUILD_SSH_KEY }}
      - name: Delete preview directory
        run: rm -rf build${{ env.PR_PATH }}
      - name: Add & commit changes
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add -A
          git commit -m "Delete preview for PR #${{env.GITHUB_PR_NUMBER}}" || true
          git push
      - name: Deploy Azure Static Web App
        env:
          # Set these env vars to allow "prod" deployment from PR
          DEPLOYMENT_PROVIDER: 'Custom'
          REPOSITORY_URL: ${{github.event.repository.html_url}}
          BRANCH: ${{github.event.pull_request.head.ref}}
        uses: azure/static-web-apps-deploy@v1
        with:
          action: upload
          app_location: build
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          skip_app_build: true

  promote-pr-preview-to-dev:
    if: |
      github.event_name == 'pull_request' && 
      github.event.action == 'closed' && 
      github.event.pull_request.merged == true
    needs: [build]
    runs-on: ubuntu-latest
    environment: 'dev'
    permissions:
      contents: read # for actions/checkout to fetch code
      pull-requests: write # for Azure/static-web-apps-deploy to comment on PRs
    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'nationalgrid-uselectric/oip-frontend-build'
          ssh-key: ${{ secrets.OIP_FRONTEND_BUILD_SSH_KEY }}
      - name: Clear build directory
        run: |
          rm -rf build${{ env.PR_PATH }}
          mv build/pr pr-tmp
          rm -rf build
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build
      - name: Move PRs back directory
        run: |
          mv pr-tmp build/pr
      - name: Add & commit changes
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add -A
          git commit -m "Delete preview for PR #${{env.GITHUB_PR_NUMBER}} & promote to dev" || true
          git push
      - name: Deploy Azure Static Web App
        env:
          # Set these env vars to allow "prod" deployment from PR
          DEPLOYMENT_PROVIDER: 'Custom'
          REPOSITORY_URL: ${{github.event.repository.html_url}}
          BRANCH: ${{github.event.pull_request.head.ref}}
        uses: azure/static-web-apps-deploy@v1
        with:
          action: upload
          app_location: build
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          skip_app_build: true

  deploy:
    if: github.event_name == 'workflow_dispatch'
    needs: [build, lint, test, sonarqube]
    permissions:
      contents: read # for actions/checkout to fetch code
      pull-requests: write # for Azure/static-web-apps-deploy to comment on PRs
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || 'dev' }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build
      - name: Deploy Azure Static Web App
        uses: azure/static-web-apps-deploy@v1
        with:
          action: upload
          app_location: build
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          skip_app_build: true
